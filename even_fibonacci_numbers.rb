# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.

def even_fibonacci_numbers(top_range)
  array = [1,2]
  i = 0
  #Creates fibonacci array with values up to 4 million
  while array[i+1] < top_range
    array.push(array[i]+array[i+1])
    i += 1
  end
  if array[i+1] >= top_range
    array.pop
  end
  #Narrows array down to only even values
  even_array = []
  array.each{|val|
    if val%2 == 0
      even_array.push(val)
    end
  }
  #Adds even_array up
  sum = even_array.inject{|total, x| total + x}
  puts sum
end
even_fibonacci_numbers(4000000)